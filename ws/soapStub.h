/* soapStub.h
   Generated by gSOAP 2.7.9e from ws/jms2webservice.h
   Copyright(C) 2000-2006, Robert van Engelen, Genivia Inc. All Rights Reserved.
   This part of the software is released under one of the following licenses:
   GPL, the gSOAP public license, or Genivia's license for commercial use.
*/

#ifndef soapStub_H
#define soapStub_H
#include "stdsoap2.h"
#ifdef __cplusplus
extern "C" {
#endif

/******************************************************************************\
 *                                                                            *
 * Enumerations                                                               *
 *                                                                            *
\******************************************************************************/


#ifndef SOAP_TYPE_xsd__boolean
#define SOAP_TYPE_xsd__boolean (10)
/* xsd:boolean */
enum xsd__boolean {xsd__boolean__false_ = 0, xsd__boolean__true_ = 1};
#endif

/******************************************************************************\
 *                                                                            *
 * Classes and Structs                                                        *
 *                                                                            *
\******************************************************************************/


#ifndef SOAP_TYPE_xsd__base64Binary
#define SOAP_TYPE_xsd__base64Binary (6)
/* Base64 schema type: */
struct xsd__base64Binary
{
	unsigned char *__ptr;
	int __size;
	char *id;	/* optional element of type xsd:string */
	char *type;	/* optional element of type xsd:string */
	char *options;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE__ns1__getMsgFromTopic
#define SOAP_TYPE__ns1__getMsgFromTopic (11)
/* ns1:getMsgFromTopic */
struct _ns1__getMsgFromTopic
{
	char *in0;	/* required element of type xsd:string */
	char *in1;	/* required element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE__ns1__getMsgFromTopicResponse
#define SOAP_TYPE__ns1__getMsgFromTopicResponse (12)
/* ns1:getMsgFromTopicResponse */
struct _ns1__getMsgFromTopicResponse
{
	struct ns2__ArrayOfTextMessage *out;	/* RPC return element */	/* required element of type ns2:ArrayOfTextMessage */
};
#endif

#ifndef SOAP_TYPE__ns1__postMsgToTopic
#define SOAP_TYPE__ns1__postMsgToTopic (15)
/* ns1:postMsgToTopic */
struct _ns1__postMsgToTopic
{
	char *in0;	/* required element of type xsd:string */
	char *in1;	/* required element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE__ns1__postMsgToTopicResponse
#define SOAP_TYPE__ns1__postMsgToTopicResponse (16)
/* ns1:postMsgToTopicResponse */
struct _ns1__postMsgToTopicResponse
{
	struct ns2__TextMessage *out;	/* RPC return element */	/* required element of type ns2:TextMessage */
};
#endif

#ifndef SOAP_TYPE__ns1__postMsgToQueue
#define SOAP_TYPE__ns1__postMsgToQueue (19)
/* ns1:postMsgToQueue */
struct _ns1__postMsgToQueue
{
	char *in0;	/* required element of type xsd:string */
	char *in1;	/* required element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE__ns1__postMsgToQueueResponse
#define SOAP_TYPE__ns1__postMsgToQueueResponse (20)
/* ns1:postMsgToQueueResponse */
struct _ns1__postMsgToQueueResponse
{
	struct ns2__TextMessage *out;	/* RPC return element */	/* required element of type ns2:TextMessage */
};
#endif

#ifndef SOAP_TYPE__ns1__getMsgFromQueue
#define SOAP_TYPE__ns1__getMsgFromQueue (21)
/* ns1:getMsgFromQueue */
struct _ns1__getMsgFromQueue
{
	char *in0;	/* required element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE__ns1__getMsgFromQueueResponse
#define SOAP_TYPE__ns1__getMsgFromQueueResponse (22)
/* ns1:getMsgFromQueueResponse */
struct _ns1__getMsgFromQueueResponse
{
	struct ns2__ArrayOfTextMessage *out;	/* RPC return element */	/* required element of type ns2:ArrayOfTextMessage */
};
#endif

#ifndef SOAP_TYPE_ns2__ArrayOfTextMessage
#define SOAP_TYPE_ns2__ArrayOfTextMessage (13)
/* ns2:ArrayOfTextMessage */
struct ns2__ArrayOfTextMessage
{
	int __sizeTextMessage;	/* sequence of elements <TextMessage> */
	struct ns2__TextMessage *TextMessage;	/* optional element of type ns2:TextMessage */
};
#endif

#ifndef SOAP_TYPE_ns2__TextMessage
#define SOAP_TYPE_ns2__TextMessage (17)
/* ns2:TextMessage */
struct ns2__TextMessage
{
	char *text;	/* optional element of type xsd:string */
	char *JMSCorrelationID;	/* optional element of type xsd:string */
	struct xsd__base64Binary *JMSCorrelationIDAsBytes;	/* optional element of type xsd:base64Binary */
	int *JMSDeliveryMode;	/* optional element of type xsd:int */
	struct ns2__Destination *JMSDestination;	/* optional element of type ns2:Destination */
	LONG64 *JMSExpiration;	/* optional element of type xsd:long */
	char *JMSMessageID;	/* optional element of type xsd:string */
	int *JMSPriority;	/* optional element of type xsd:int */
	enum xsd__boolean *JMSRedelivered;	/* optional element of type xsd:boolean */
	struct ns2__Destination *JMSReplyTo;	/* optional element of type ns2:Destination */
	LONG64 *JMSTimestamp;	/* optional element of type xsd:long */
	char *JMSType;	/* optional element of type xsd:string */
	struct ns3__Enumeration *propertyNames;	/* optional element of type ns3:Enumeration */
};
#endif

#ifndef SOAP_TYPE_ns2__Destination
#define SOAP_TYPE_ns2__Destination (25)
/* ns2:Destination */
struct ns2__Destination
{
};
#endif

#ifndef SOAP_TYPE_ns2__JMSException
#define SOAP_TYPE_ns2__JMSException (32)
/* ns2:JMSException */
struct ns2__JMSException
{
	char *errorCode;	/* optional element of type xsd:string */
	struct ns4__Exception *linkedException;	/* optional element of type ns4:Exception */
};
#endif

#ifndef SOAP_TYPE_ns3__Enumeration
#define SOAP_TYPE_ns3__Enumeration (30)
/* ns3:Enumeration */
struct ns3__Enumeration
{
};
#endif

#ifndef SOAP_TYPE_ns4__Exception
#define SOAP_TYPE_ns4__Exception (33)
/* ns4:Exception */
struct ns4__Exception
{
};
#endif

#ifndef SOAP_TYPE_ns4__Throwable
#define SOAP_TYPE_ns4__Throwable (35)
/* ns4:Throwable */
struct ns4__Throwable
{
};
#endif

#ifndef SOAP_TYPE_ns5__NamingException
#define SOAP_TYPE_ns5__NamingException (36)
/* ns5:NamingException */
struct ns5__NamingException
{
	struct ns4__Throwable *cause;	/* optional element of type ns4:Throwable */
	char *explanation;	/* optional element of type xsd:string */
	struct ns5__Name *remainingName;	/* optional element of type ns5:Name */
	struct ns5__Name *resolvedName;	/* optional element of type ns5:Name */
	char *resolvedObj;	/* optional element of type xsd:anyType */
	struct ns4__Throwable *rootCause;	/* optional element of type ns4:Throwable */
};
#endif

#ifndef SOAP_TYPE_ns5__Name
#define SOAP_TYPE_ns5__Name (38)
/* ns5:Name */
struct ns5__Name
{
	struct ns3__Enumeration *all;	/* optional element of type ns3:Enumeration */
	enum xsd__boolean *empty;	/* optional element of type xsd:boolean */
};
#endif

#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (40)
/* SOAP-ENV:Detail */
struct SOAP_ENV__Detail
{
	struct ns2__JMSException *ns1__JMSException;	/* optional element of type ns2:JMSException */
	struct ns5__NamingException *ns1__NamingException;	/* optional element of type ns5:NamingException */
	int __type;	/* any type of element <fault> (defined below) */
	void *fault;	/* transient */
	char *__any;
};
#endif

#ifndef SOAP_TYPE___ns1__getMsgFromTopic
#define SOAP_TYPE___ns1__getMsgFromTopic (48)
/* Operation wrapper: */
struct __ns1__getMsgFromTopic
{
	struct _ns1__getMsgFromTopic *ns1__getMsgFromTopic;	/* optional element of type ns1:getMsgFromTopic */
};
#endif

#ifndef SOAP_TYPE___ns1__postMsgToTopic
#define SOAP_TYPE___ns1__postMsgToTopic (52)
/* Operation wrapper: */
struct __ns1__postMsgToTopic
{
	struct _ns1__postMsgToTopic *ns1__postMsgToTopic;	/* optional element of type ns1:postMsgToTopic */
};
#endif

#ifndef SOAP_TYPE___ns1__postMsgToQueue
#define SOAP_TYPE___ns1__postMsgToQueue (56)
/* Operation wrapper: */
struct __ns1__postMsgToQueue
{
	struct _ns1__postMsgToQueue *ns1__postMsgToQueue;	/* optional element of type ns1:postMsgToQueue */
};
#endif

#ifndef SOAP_TYPE___ns1__getMsgFromQueue
#define SOAP_TYPE___ns1__getMsgFromQueue (60)
/* Operation wrapper: */
struct __ns1__getMsgFromQueue
{
	struct _ns1__getMsgFromQueue *ns1__getMsgFromQueue;	/* optional element of type ns1:getMsgFromQueue */
};
#endif

#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (61)
/* SOAP Header: */
struct SOAP_ENV__Header
{
	void *dummy;	/* transient */
};
#endif

#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (62)
/* SOAP Fault Code: */
struct SOAP_ENV__Code
{
	char *SOAP_ENV__Value;	/* optional element of type xsd:QName */
	struct SOAP_ENV__Code *SOAP_ENV__Subcode;	/* optional element of type SOAP-ENV:Code */
};
#endif

#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (64)
/* SOAP-ENV:Reason */
struct SOAP_ENV__Reason
{
	char *SOAP_ENV__Text;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (65)
/* SOAP Fault: */
struct SOAP_ENV__Fault
{
	char *faultcode;	/* optional element of type xsd:QName */
	char *faultstring;	/* optional element of type xsd:string */
	char *faultactor;	/* optional element of type xsd:string */
	struct SOAP_ENV__Detail *detail;	/* optional element of type SOAP-ENV:Detail */
	struct SOAP_ENV__Code *SOAP_ENV__Code;	/* optional element of type SOAP-ENV:Code */
	struct SOAP_ENV__Reason *SOAP_ENV__Reason;	/* optional element of type SOAP-ENV:Reason */
	char *SOAP_ENV__Node;	/* optional element of type xsd:string */
	char *SOAP_ENV__Role;	/* optional element of type xsd:string */
	struct SOAP_ENV__Detail *SOAP_ENV__Detail;	/* optional element of type SOAP-ENV:Detail */
};
#endif

/******************************************************************************\
 *                                                                            *
 * Types with Custom Serializers                                              *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Typedefs                                                                   *
 *                                                                            *
\******************************************************************************/

#ifndef SOAP_TYPE__XML
#define SOAP_TYPE__XML (4)
typedef char *_XML;
#endif

#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (5)
typedef char *_QName;
#endif


/******************************************************************************\
 *                                                                            *
 * Typedef Synonyms                                                           *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Externals                                                                  *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Stubs                                                                      *
 *                                                                            *
\******************************************************************************/


SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__getMsgFromTopic(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _ns1__getMsgFromTopic *ns1__getMsgFromTopic, struct _ns1__getMsgFromTopicResponse *ns1__getMsgFromTopicResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__postMsgToTopic(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _ns1__postMsgToTopic *ns1__postMsgToTopic, struct _ns1__postMsgToTopicResponse *ns1__postMsgToTopicResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__postMsgToQueue(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _ns1__postMsgToQueue *ns1__postMsgToQueue, struct _ns1__postMsgToQueueResponse *ns1__postMsgToQueueResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__getMsgFromQueue(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _ns1__getMsgFromQueue *ns1__getMsgFromQueue, struct _ns1__getMsgFromQueueResponse *ns1__getMsgFromQueueResponse);

#ifdef __cplusplus
}
#endif

#endif

/* End of soapStub.h */
